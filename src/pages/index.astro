---
import { getUrl } from "src/utils/navigation";
import Html from "src/components/layout/Html.astro";
import PostCard from "src/components/PostCard.astro";
import RightArrow from "src/icons/lucide--arrow-right.svg";
import { getPosts, getPage } from "src/utils/collections";

const homePage = await getPage("home");
const { title, summary } = homePage.data;
const { Content } = await homePage.render();

const latestPosts = await getPosts({
  maxCount: 3,
  sort: "date",
  order: "desc",
});
const postsCount = (await getPosts()).length;
---

{/* --------------------------------[ HTML ]-------------------------------- */}

<Html openGraph={{ title, description: summary }} data-page="Home">
  <div id="welcome">
    <h1>{title}</h1>
    <Content />
  </div>
  {
    latestPosts.length > 0 && (
      <>
        <h2>Latest posts</h2>
        <div id="latest-post">
          {latestPosts.map((post) => (
            <div>
              <PostCard post={post} />
            </div>
          ))}
        </div>
        {latestPosts.length !== postsCount && (
          <a id="view-all" href={getUrl("/posts")}>
            View all posts <RightArrow width={16} height={16} />
          </a>
        )}
      </>
    )
  }
</Html>

{/* ---------------------------------[ CSS ]-------------------------------- */}

<style>
  [data-page="Home"] {
    display: flex;
    flex-direction: column;
    gap: 1em;

    & > #welcome {
      padding-inline: var(--middle-x-padding);
      max-width: 70ch;
      padding-top: 64px;
      margin-bottom: 16px;

      & > h1 {
        margin-bottom: 1em;
      }
    }

    & > h2 {
      margin-block: 0.5em;
      margin-top: 1em;
      padding-inline: var(--middle-x-padding);
    }

    & > #latest-post {
      & > div {
        border-top: 1px solid var(--layout-border);
      }

      & > div:last-child {
        border-bottom: 1px solid var(--layout-border);
      }
    }

    & > #view-all {
      display: flex;
      align-items: center;
      gap: 8px;
      font-weight: 500;
      place-self: center;
      padding: 16px 24px;
      border-radius: 8px;
      margin-top: 16px;
      margin-bottom: 64px;

      transition: background-color 100ms;

      & > svg {
        transition: translate 100ms;
      }

      &:hover,
      &:focus-visible {
        background-color: var(--foreground-10);

        & > svg {
          translate: 4px 0px;
        }
      }
    }
  }
</style>
